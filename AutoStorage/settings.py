"""
Django settings for AutoStorage project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os


from dotenv import load_dotenv

# Încarcă variabilele din fișierul .env
load_dotenv()



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/



# Secret key din .env
SECRET_KEY = os.getenv('SECRET_KEY')

# Setarea DEBUG din .env - convertirea din string în boolean
DEBUG = os.getenv('DEBUG', 'False').lower() in ('true', '1', 't')

# ALLOWED_HOSTS - poți citi din .env și apoi să-l transformi într-o listă
ALLOWED_HOSTS_RAW = os.getenv('ALLOWED_HOSTS', '')
ALLOWED_HOSTS = ALLOWED_HOSTS_RAW.split(',') if ALLOWED_HOSTS_RAW else []



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',


    #my app

    'apps.core',
    'apps.accounts',
    'apps.games',
    'apps.store',
    'apps.robot_interface',
    'apps.inventory',
    'apps.store_new',
    'apps.fizic_inventory',


   
     #REST FRAMEWORKS

    'rest_framework',
    #'rest_framework_simplejwt.token_blacklist',


]

MIDDLEWARE = [


    
    'whitenoise.middleware.WhiteNoiseMiddleware',

    'django.middleware.locale.LocaleMiddleware',


    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AutoStorage.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Template-uri globale, aflate în afara aplicațiilor
        'APP_DIRS': True,  # Nu se mai caută template-uri în directoarele aplicațiilor
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AutoStorage.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# Configurarea bazei de date pentru MongoDB cu djongo
DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': os.getenv('MONGO_NAME'),
        'CLIENT': {
            'host': os.getenv('MONGO_HOST'),
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# ... restul configurației din settings.py ...

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# (Opțional) Dacă ai și alte directoare de static, le poți adăuga aici
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]








# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Pentru a folosi modelul de utilizator personalizat, adaugă și:
AUTH_USER_MODEL = 'accounts.CustomUser'

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


LOGIN_URL = '/account/login/'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'apps.accounts.authentication.CustomJWTAuthentication',
    ),
    # alte setări...
}



USE_I18N = True
LANGUAGES = [
    ('en', 'English'),
    ('ro', 'Română'),
]



CSRF_TRUSTED_ORIGINS = [
    "https://www.depozitautomat.shop",
    "https://depozitautomat.shop",
    "https://*.onrender.com"
]


