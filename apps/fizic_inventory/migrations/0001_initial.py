# Generated by Django 3.2 on 2025-02-26 16:41

import apps.fizic_inventory.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0003_auto_20250221_2107'),
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=apps.fizic_inventory.models.generate_code, help_text='Cod unic de 7 caractere; se generează automat dacă nu este specificat.', max_length=7, unique=True)),
                ('color', models.CharField(choices=[('red', 'Red'), ('blue', 'Blue'), ('green', 'Green'), ('simple', 'Simple')], max_length=10)),
                ('symbol', models.CharField(choices=[('A', 'A'), ('K', 'K'), ('O', 'O'), ('X', 'X (None)')], default='X', max_length=1)),
                ('status', models.CharField(choices=[('free', 'Free'), ('assigned', 'Assigned'), ('in_process', 'In Process'), ('returned', 'Returned'), ('sold', 'Sold')], default='free', max_length=20)),
                ('virtual_box_code', models.CharField(blank=True, help_text='Codul cutiei virtuale asociate, dacă există.', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('box', models.ForeignKey(blank=True, help_text='Box-ul asociat (din apps.inventory); doar unul la un moment dat.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.box')),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=apps.fizic_inventory.models.generate_code, editable=False, help_text='Cod unic de 7 caractere generat automat.', max_length=7, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('depozit', 'Depozit'), ('receptie', 'Recepție'), ('livrare', 'Livrare'), ('procesare', 'Procesare'), ('unknown', 'Unknown')], default='depozit', max_length=20)),
                ('capacity', models.PositiveIntegerField(help_text='Capacitatea totală a zonei.')),
                ('current_occupancy', models.PositiveIntegerField(default=0, help_text='Numărul actual de containere.')),
            ],
        ),
        migrations.CreateModel(
            name='ContainerEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('moved', 'Moved'), ('assigned', 'Assigned'), ('returned', 'Returned'), ('sold', 'Sold'), ('delivered', 'Delivered'), ('checkin', 'Check-in')], max_length=20)),
                ('event_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('box', models.ForeignKey(blank=True, help_text='Box-ul asociat evenimentului.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.box')),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='fizic_inventory.container')),
                ('from_zone', models.ForeignKey(blank=True, help_text='Zona de unde a fost mutat, dacă este cazul.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events_from', to='fizic_inventory.zone')),
                ('to_zone', models.ForeignKey(blank=True, help_text='Zona în care a fost mutat, dacă este cazul.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events_to', to='fizic_inventory.zone')),
            ],
        ),
        migrations.AddField(
            model_name='container',
            name='zone',
            field=models.ForeignKey(blank=True, help_text='Zona în care se află containerul.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='containers', to='fizic_inventory.zone'),
        ),
    ]
